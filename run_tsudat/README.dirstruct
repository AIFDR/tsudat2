A program has been written to create a new ANUGA directory structure.
It is named 'mk_tsudat_dir.py'.  Use the 'tree' command to get a dump
of the generated directory:
$ ./mk_tsudat_dir.py fred trial /tmp/xyzzy project scenario 12345
$ tree -F /tmp/xyzzy
/tmp/xyzzy
`-- fred/
    `-- project/
        `-- scenario/
            |-- boundaries/
            |   |-- event_12345.lst
            |   |-- landward_boundary.csv
            |   `-- urs_order.csv
            |-- gauges/
            |   `-- gauges_final.csv
            |-- meshes/
            |   `-- meshes.msh
            |-- outputs/
            |   `-- generated_files
            |-- polygons/
            `-- topographies/
                |-- combined_elevation.pts
                `-- combined_elevation.txt


Old ANUGA directory structure
=============================

Below, $UPPERCASE is some fixed value from the environment
and $lowercase is a project.py value or something derived from a project.py value.

$INUNDATIONHOME
    'data'
        $state (user-defined string in project.py)
            $scenario_folder (user-defined string in project.py)
                'anuga'
                    'topographies'
                        $scenario_name+'_combined_elevation.pts'
                        $scenario_name+'_combined_elevation.txt'
                    'polygons'
                    'boundaries'
                        $event_number
                            $scenario_name
                            'event.lst'
                        'landward_boundary.csv'
                        'urs_order.csv'
                    'outputs'
                        $time+'_build_'+$user
                        $time+'_run_'+$comment	# comment = setup+tide+eventID (user-defined)
                            $scenario_name
                    'gauges'
                        'gauges_final.csv'
                    'meshes'
                        $scenario_name+'.msh'

$MUXHOME
    'mux'
        <all the MUX files>


Proposed TsuDAT2 run directory structure
========================================

As before, $UPPERCASE is some fixed value from the configuration
and $lowercase is a UI value or something derived from a UI value.

$TSUDATHOME		# some pre-defined place
    $user		# user name from login
        $project	# project name from login
            $scenario   # scenario name from UI
                'topographies'
                    'combined_elevation.pts'
                    'combined_elevation.txt'
                'polygons'
                    <polygon files>
                'boundaries'
                    'event_%d.lst' % $event_number
                    'landward_boundary.csv'
                    'urs_order.csv'
                'outputs'
                    <generated run output files>
                'gauges'
                    'gauges_final.csv'
                'meshes'
                    'mesh.msh'    # need a better name?

$MUXHOME		# some pre-defined place
    'mux'
        <all the MUX files>


Discussion
==========
The $scenario stuff was made more high-level.  Any encoding of $scenarion at lower
levels was removed.

Do we need $time of run?  If user re-runs a scenario is it OK if we overwrite results?
Removed $time as the time/date of dirs/files should be enough.

